name: Full CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  TF_AUTHOR: "yazeed"
  TF_DB_ADMIN: "yazeed"
  TF_RESOURCE_PREFIX: "yazeed"
  TF_RG_NAME: "yazeed-rg"
  TF_RG_LOCATION: "centralindia"
  TF_CONTACT_NAME: "Yazeed"
  TF_CONTACT_EMAIL: "yazeed@example.com"
  TF_FE_PORT: 80
  TF_BE_PORT: 8080

  FRONT_DIR: ./frontend
  BACK_DIR: ./backend

  FRONT_IMAGE_NAME: frontendapp
  BACK_IMAGE_NAME: backendapp

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: ${{ env.FRONT_DIR }}/package-lock.json

      - name: Install frontend dependencies
        run: |
          cd ${{ env.FRONT_DIR }}
          npm ci

      - name: Build frontend
        run: |
          cd ${{ env.FRONT_DIR }}
          npm run build 2>/dev/null || echo "No build step"

  build-backend:
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java (for Maven)
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build backend (Maven)
        run: |
          cd ${{ env.BACK_DIR }}
          mvn clean package -DskipTests

  docker-and-terraform:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Set image tag
        run: echo "TAG=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Build & Push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ${{ env.FRONT_DIR }}
          push: true
          tags: |
            yazeed10/yazeed-burger-frontend:latest

      - name: Build & Push backend image
        uses: docker/build-push-action@v4
        with:
          context: ${{ env.BACK_DIR }}
          push: true
          tags: |
            yazeed10/yazeed-burger-backend:latest

      - name: Azure Login (Service Principal)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init -input=false
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Terraform Plan
        working-directory: ./terraform
        run: |
          terraform plan -input=false -out=tfplan \
            -var "author=${{ env.TF_AUTHOR }}" \
            -var "db_admin=${{ env.TF_DB_ADMIN }}" \
            -var "db_password=${{ secrets.TF_DB_PASSWORD }}" \
            -var "resource_prefix=${{ env.TF_RESOURCE_PREFIX }}" \
            -var "resource_group_name=${{ env.TF_RG_NAME }}" \
            -var "resource_group_location=${{ env.TF_RG_LOCATION }}" \
            -var "contact_person_name=${{ env.TF_CONTACT_NAME }}" \
            -var "contact_person_email=${{ env.TF_CONTACT_EMAIL }}" \
            -var "fe_port=${{ env.TF_FE_PORT }}" \
            -var "be_port=${{ env.TF_BE_PORT }}" \
            -var "fe_image_name_and_tag=${{ secrets.DOCKERHUB_USERNAME }}yazeed-burger-frontend{{ github.sha }}" \
            -var "be_image_name_and_tag=${{ secrets.DOCKERHUB_USERNAME }}yazeed-burger-backend{{ github.sha }}"
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        working-directory: ./terraform
        run: terraform apply -input=false -auto-approve tfplan
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

