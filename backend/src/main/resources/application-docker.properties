# Server Configuration
server.port=8080

# Database Configuration (PostgreSQL for Docker)
spring.datasource.url=${DB_URL:jdbc:postgresql://${DB_HOST:database}:${DB_PORT:5432}/${DB_NAME:burgerbuilder}}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:YourStrong!Passw0rd}
spring.datasource.driver-class-name=${DB_DRIVER:org.postgresql.Driver}

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Initialize database with schema and data
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
spring.sql.init.schema-locations=classpath:schema-postgresql.sql
spring.sql.init.data-locations=classpath:data-postgresql.sql

# CORS Configuration - Handled by WebMvcConfigurer in BurgerBuilderApplication.java

# Logging Configuration
logging.level.com.burgerbuilder=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Application Properties
# CORS is now handled by CorsConfig.java


