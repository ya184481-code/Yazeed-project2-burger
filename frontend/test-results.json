{"numTotalTestSuites":19,"numPassedTestSuites":19,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":46,"numPassedTests":46,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"startTime":1759406309533,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["","API Service","getIngredients"],"fullName":" API Service getIngredients should fetch all ingredients","status":"passed","title":"should fetch all ingredients","duration":5,"failureMessages":[]},{"ancestorTitles":["","API Service","getIngredientsByCategory"],"fullName":" API Service getIngredientsByCategory should fetch ingredients by category","status":"passed","title":"should fetch ingredients by category","duration":0,"failureMessages":[]},{"ancestorTitles":["","API Service","addToCart"],"fullName":" API Service addToCart should add item to cart","status":"passed","title":"should add item to cart","duration":2,"failureMessages":[]},{"ancestorTitles":["","API Service","getCart"],"fullName":" API Service getCart should fetch cart items by session id","status":"passed","title":"should fetch cart items by session id","duration":0,"failureMessages":[]},{"ancestorTitles":["","API Service","removeCartItem"],"fullName":" API Service removeCartItem should remove item from cart","status":"passed","title":"should remove item from cart","duration":1,"failureMessages":[]},{"ancestorTitles":["","API Service","createOrder"],"fullName":" API Service createOrder should create a new order","status":"passed","title":"should create a new order","duration":0,"failureMessages":[]},{"ancestorTitles":["","API Service","getOrder"],"fullName":" API Service getOrder should fetch order by id","status":"passed","title":"should fetch order by id","duration":1,"failureMessages":[]}],"startTime":1759406310715,"endTime":1759406310725,"status":"passed","message":"","name":"/Users/saurabhdhingra/capstone_project_ih/frontend/src/services/api.test.ts"},{"assertionResults":[{"ancestorTitles":["","BurgerBuilderContext"],"fullName":" BurgerBuilderContext should initialize with empty layers","status":"passed","title":"should initialize with empty layers","duration":14,"failureMessages":[]},{"ancestorTitles":["","BurgerBuilderContext"],"fullName":" BurgerBuilderContext should set ingredients","status":"passed","title":"should set ingredients","duration":2,"failureMessages":[]},{"ancestorTitles":["","BurgerBuilderContext"],"fullName":" BurgerBuilderContext should add a new layer","status":"passed","title":"should add a new layer","duration":2,"failureMessages":[]},{"ancestorTitles":["","BurgerBuilderContext"],"fullName":" BurgerBuilderContext should increment quantity when adding existing layer","status":"passed","title":"should increment quantity when adding existing layer","duration":1,"failureMessages":[]},{"ancestorTitles":["","BurgerBuilderContext"],"fullName":" BurgerBuilderContext should add different ingredients as separate layers","status":"passed","title":"should add different ingredients as separate layers","duration":2,"failureMessages":[]},{"ancestorTitles":["","BurgerBuilderContext"],"fullName":" BurgerBuilderContext should decrement quantity when removing layer","status":"passed","title":"should decrement quantity when removing layer","duration":1,"failureMessages":[]},{"ancestorTitles":["","BurgerBuilderContext"],"fullName":" BurgerBuilderContext should remove layer completely when quantity reaches 0","status":"passed","title":"should remove layer completely when quantity reaches 0","duration":1,"failureMessages":[]},{"ancestorTitles":["","BurgerBuilderContext"],"fullName":" BurgerBuilderContext should clear all layers","status":"passed","title":"should clear all layers","duration":1,"failureMessages":[]},{"ancestorTitles":["","BurgerBuilderContext"],"fullName":" BurgerBuilderContext should get ingredient by id","status":"passed","title":"should get ingredient by id","duration":2,"failureMessages":[]},{"ancestorTitles":["","BurgerBuilderContext"],"fullName":" BurgerBuilderContext should return undefined for non-existent ingredient","status":"passed","title":"should return undefined for non-existent ingredient","duration":1,"failureMessages":[]},{"ancestorTitles":["","BurgerBuilderContext"],"fullName":" BurgerBuilderContext should calculate total price correctly","status":"passed","title":"should calculate total price correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","BurgerBuilderContext"],"fullName":" BurgerBuilderContext should return 0 for total price with no layers","status":"passed","title":"should return 0 for total price with no layers","duration":1,"failureMessages":[]},{"ancestorTitles":["","BurgerBuilderContext"],"fullName":" BurgerBuilderContext should throw error when used outside provider","status":"passed","title":"should throw error when used outside provider","duration":5,"failureMessages":[]}],"startTime":1759406310668,"endTime":1759406310702,"status":"passed","message":"","name":"/Users/saurabhdhingra/capstone_project_ih/frontend/src/context/BurgerBuilderContext.test.tsx"},{"assertionResults":[{"ancestorTitles":["","CartContext"],"fullName":" CartContext should initialize with empty cart","status":"passed","title":"should initialize with empty cart","duration":13,"failureMessages":[]},{"ancestorTitles":["","CartContext"],"fullName":" CartContext should add item to cart","status":"passed","title":"should add item to cart","duration":4,"failureMessages":[]},{"ancestorTitles":["","CartContext"],"fullName":" CartContext should remove item from cart","status":"passed","title":"should remove item from cart","duration":1,"failureMessages":[]},{"ancestorTitles":["","CartContext"],"fullName":" CartContext should update item quantity","status":"passed","title":"should update item quantity","duration":2,"failureMessages":[]},{"ancestorTitles":["","CartContext"],"fullName":" CartContext should remove item when quantity updated to 0","status":"passed","title":"should remove item when quantity updated to 0","duration":1,"failureMessages":[]},{"ancestorTitles":["","CartContext"],"fullName":" CartContext should clear entire cart","status":"passed","title":"should clear entire cart","duration":1,"failureMessages":[]},{"ancestorTitles":["","CartContext"],"fullName":" CartContext should calculate total price correctly","status":"passed","title":"should calculate total price correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","CartContext"],"fullName":" CartContext should calculate total items correctly","status":"passed","title":"should calculate total items correctly","duration":2,"failureMessages":[]},{"ancestorTitles":["","CartContext"],"fullName":" CartContext should persist cart to localStorage","status":"passed","title":"should persist cart to localStorage","duration":1,"failureMessages":[]},{"ancestorTitles":["","CartContext"],"fullName":" CartContext should load cart from localStorage on mount","status":"passed","title":"should load cart from localStorage on mount","duration":1,"failureMessages":[]},{"ancestorTitles":["","CartContext"],"fullName":" CartContext should throw error when used outside provider","status":"passed","title":"should throw error when used outside provider","duration":5,"failureMessages":[]}],"startTime":1759406310668,"endTime":1759406310700,"status":"passed","message":"","name":"/Users/saurabhdhingra/capstone_project_ih/frontend/src/context/CartContext.test.tsx"},{"assertionResults":[{"ancestorTitles":["","sessionManager","getSessionId"],"fullName":" sessionManager getSessionId should create a new session ID if none exists","status":"passed","title":"should create a new session ID if none exists","duration":1,"failureMessages":[]},{"ancestorTitles":["","sessionManager","getSessionId"],"fullName":" sessionManager getSessionId should return the same session ID on subsequent calls","status":"passed","title":"should return the same session ID on subsequent calls","duration":0,"failureMessages":[]},{"ancestorTitles":["","sessionManager","getSessionId"],"fullName":" sessionManager getSessionId should retrieve existing session ID from localStorage","status":"passed","title":"should retrieve existing session ID from localStorage","duration":0,"failureMessages":[]},{"ancestorTitles":["","sessionManager","getSessionId"],"fullName":" sessionManager getSessionId should store session ID in localStorage","status":"passed","title":"should store session ID in localStorage","duration":0,"failureMessages":[]},{"ancestorTitles":["","sessionManager","clearSession"],"fullName":" sessionManager clearSession should remove session ID from localStorage","status":"passed","title":"should remove session ID from localStorage","duration":0,"failureMessages":[]},{"ancestorTitles":["","sessionManager","clearSession"],"fullName":" sessionManager clearSession should work even if no session exists","status":"passed","title":"should work even if no session exists","duration":0,"failureMessages":[]}],"startTime":1759406310661,"endTime":1759406310663,"status":"passed","message":"","name":"/Users/saurabhdhingra/capstone_project_ih/frontend/src/utils/sessionManager.test.ts"},{"assertionResults":[{"ancestorTitles":["","IngredientCard"],"fullName":" IngredientCard should render ingredient name","status":"passed","title":"should render ingredient name","duration":23,"failureMessages":[]},{"ancestorTitles":["","IngredientCard"],"fullName":" IngredientCard should render ingredient price with 2 decimal places","status":"passed","title":"should render ingredient price with 2 decimal places","duration":5,"failureMessages":[]},{"ancestorTitles":["","IngredientCard"],"fullName":" IngredientCard should render correct icon for patties category","status":"passed","title":"should render correct icon for patties category","duration":7,"failureMessages":[]},{"ancestorTitles":["","IngredientCard"],"fullName":" IngredientCard should render correct icon for buns category","status":"passed","title":"should render correct icon for buns category","duration":5,"failureMessages":[]},{"ancestorTitles":["","IngredientCard"],"fullName":" IngredientCard should render correct icon for toppings category","status":"passed","title":"should render correct icon for toppings category","duration":5,"failureMessages":[]},{"ancestorTitles":["","IngredientCard"],"fullName":" IngredientCard should render correct icon for sauces category","status":"passed","title":"should render correct icon for sauces category","duration":5,"failureMessages":[]},{"ancestorTitles":["","IngredientCard"],"fullName":" IngredientCard should call onAdd with ingredient id when card is clicked","status":"passed","title":"should call onAdd with ingredient id when card is clicked","duration":173,"failureMessages":[]},{"ancestorTitles":["","IngredientCard"],"fullName":" IngredientCard should call onAdd when add button is clicked","status":"passed","title":"should call onAdd when add button is clicked","duration":57,"failureMessages":[]},{"ancestorTitles":["","IngredientCard"],"fullName":" IngredientCard should format price with whole numbers correctly","status":"passed","title":"should format price with whole numbers correctly","duration":3,"failureMessages":[]}],"startTime":1759406310749,"endTime":1759406311033,"status":"passed","message":"","name":"/Users/saurabhdhingra/capstone_project_ih/frontend/src/components/Ingredients/IngredientCard.test.tsx"}]}