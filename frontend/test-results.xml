<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="46" failures="0" errors="0" time="1.525">
    <testsuite name="src/context/BurgerBuilderContext.test.tsx" timestamp="2025-10-02T12:48:31.016Z" hostname="Saurabhs-MacBook-Pro.local" tests="13" failures="0" errors="0" skipped="0" time="0.03">
        <testcase classname="src/context/BurgerBuilderContext.test.tsx" name="BurgerBuilderContext &gt; should initialize with empty layers" time="0.01">
        </testcase>
        <testcase classname="src/context/BurgerBuilderContext.test.tsx" name="BurgerBuilderContext &gt; should set ingredients" time="0.002">
        </testcase>
        <testcase classname="src/context/BurgerBuilderContext.test.tsx" name="BurgerBuilderContext &gt; should add a new layer" time="0.002">
        </testcase>
        <testcase classname="src/context/BurgerBuilderContext.test.tsx" name="BurgerBuilderContext &gt; should increment quantity when adding existing layer" time="0.001">
        </testcase>
        <testcase classname="src/context/BurgerBuilderContext.test.tsx" name="BurgerBuilderContext &gt; should add different ingredients as separate layers" time="0.002">
        </testcase>
        <testcase classname="src/context/BurgerBuilderContext.test.tsx" name="BurgerBuilderContext &gt; should decrement quantity when removing layer" time="0.001">
        </testcase>
        <testcase classname="src/context/BurgerBuilderContext.test.tsx" name="BurgerBuilderContext &gt; should remove layer completely when quantity reaches 0" time="0.002">
        </testcase>
        <testcase classname="src/context/BurgerBuilderContext.test.tsx" name="BurgerBuilderContext &gt; should clear all layers" time="0.001">
        </testcase>
        <testcase classname="src/context/BurgerBuilderContext.test.tsx" name="BurgerBuilderContext &gt; should get ingredient by id" time="0.001">
        </testcase>
        <testcase classname="src/context/BurgerBuilderContext.test.tsx" name="BurgerBuilderContext &gt; should return undefined for non-existent ingredient" time="0.001">
        </testcase>
        <testcase classname="src/context/BurgerBuilderContext.test.tsx" name="BurgerBuilderContext &gt; should calculate total price correctly" time="0.002">
        </testcase>
        <testcase classname="src/context/BurgerBuilderContext.test.tsx" name="BurgerBuilderContext &gt; should return 0 for total price with no layers" time="0.001">
        </testcase>
        <testcase classname="src/context/BurgerBuilderContext.test.tsx" name="BurgerBuilderContext &gt; should throw error when used outside provider" time="0.004">
        </testcase>
    </testsuite>
    <testsuite name="src/context/CartContext.test.tsx" timestamp="2025-10-02T12:48:31.017Z" hostname="Saurabhs-MacBook-Pro.local" tests="11" failures="0" errors="0" skipped="0" time="0.033">
        <testcase classname="src/context/CartContext.test.tsx" name="CartContext &gt; should initialize with empty cart" time="0.011">
        </testcase>
        <testcase classname="src/context/CartContext.test.tsx" name="CartContext &gt; should add item to cart" time="0.003">
        </testcase>
        <testcase classname="src/context/CartContext.test.tsx" name="CartContext &gt; should remove item from cart" time="0.002">
        </testcase>
        <testcase classname="src/context/CartContext.test.tsx" name="CartContext &gt; should update item quantity" time="0.002">
        </testcase>
        <testcase classname="src/context/CartContext.test.tsx" name="CartContext &gt; should remove item when quantity updated to 0" time="0.002">
        </testcase>
        <testcase classname="src/context/CartContext.test.tsx" name="CartContext &gt; should clear entire cart" time="0.001">
        </testcase>
        <testcase classname="src/context/CartContext.test.tsx" name="CartContext &gt; should calculate total price correctly" time="0.001">
        </testcase>
        <testcase classname="src/context/CartContext.test.tsx" name="CartContext &gt; should calculate total items correctly" time="0.002">
        </testcase>
        <testcase classname="src/context/CartContext.test.tsx" name="CartContext &gt; should persist cart to localStorage" time="0.001">
        </testcase>
        <testcase classname="src/context/CartContext.test.tsx" name="CartContext &gt; should load cart from localStorage on mount" time="0.002">
        </testcase>
        <testcase classname="src/context/CartContext.test.tsx" name="CartContext &gt; should throw error when used outside provider" time="0.004">
        </testcase>
    </testsuite>
    <testsuite name="src/services/api.test.ts" timestamp="2025-10-02T12:48:31.018Z" hostname="Saurabhs-MacBook-Pro.local" tests="7" failures="0" errors="0" skipped="0" time="0.006">
        <testcase classname="src/services/api.test.ts" name="API Service &gt; getIngredients &gt; should fetch all ingredients" time="0.002">
        </testcase>
        <testcase classname="src/services/api.test.ts" name="API Service &gt; getIngredientsByCategory &gt; should fetch ingredients by category" time="0">
        </testcase>
        <testcase classname="src/services/api.test.ts" name="API Service &gt; addToCart &gt; should add item to cart" time="0.001">
        </testcase>
        <testcase classname="src/services/api.test.ts" name="API Service &gt; getCart &gt; should fetch cart items by session id" time="0">
        </testcase>
        <testcase classname="src/services/api.test.ts" name="API Service &gt; removeCartItem &gt; should remove item from cart" time="0">
        </testcase>
        <testcase classname="src/services/api.test.ts" name="API Service &gt; createOrder &gt; should create a new order" time="0.002">
        </testcase>
        <testcase classname="src/services/api.test.ts" name="API Service &gt; getOrder &gt; should fetch order by id" time="0">
        </testcase>
    </testsuite>
    <testsuite name="src/utils/sessionManager.test.ts" timestamp="2025-10-02T12:48:31.019Z" hostname="Saurabhs-MacBook-Pro.local" tests="6" failures="0" errors="0" skipped="0" time="0.003">
        <testcase classname="src/utils/sessionManager.test.ts" name="sessionManager &gt; getSessionId &gt; should create a new session ID if none exists" time="0.001">
        </testcase>
        <testcase classname="src/utils/sessionManager.test.ts" name="sessionManager &gt; getSessionId &gt; should return the same session ID on subsequent calls" time="0">
        </testcase>
        <testcase classname="src/utils/sessionManager.test.ts" name="sessionManager &gt; getSessionId &gt; should retrieve existing session ID from localStorage" time="0.001">
        </testcase>
        <testcase classname="src/utils/sessionManager.test.ts" name="sessionManager &gt; getSessionId &gt; should store session ID in localStorage" time="0">
        </testcase>
        <testcase classname="src/utils/sessionManager.test.ts" name="sessionManager &gt; clearSession &gt; should remove session ID from localStorage" time="0">
        </testcase>
        <testcase classname="src/utils/sessionManager.test.ts" name="sessionManager &gt; clearSession &gt; should work even if no session exists" time="0.001">
        </testcase>
    </testsuite>
    <testsuite name="src/components/Ingredients/IngredientCard.test.tsx" timestamp="2025-10-02T12:48:31.019Z" hostname="Saurabhs-MacBook-Pro.local" tests="9" failures="0" errors="0" skipped="0" time="0.2">
        <testcase classname="src/components/Ingredients/IngredientCard.test.tsx" name="IngredientCard &gt; should render ingredient name" time="0.017">
        </testcase>
        <testcase classname="src/components/Ingredients/IngredientCard.test.tsx" name="IngredientCard &gt; should render ingredient price with 2 decimal places" time="0.005">
        </testcase>
        <testcase classname="src/components/Ingredients/IngredientCard.test.tsx" name="IngredientCard &gt; should render correct icon for patties category" time="0.005">
        </testcase>
        <testcase classname="src/components/Ingredients/IngredientCard.test.tsx" name="IngredientCard &gt; should render correct icon for buns category" time="0.003">
        </testcase>
        <testcase classname="src/components/Ingredients/IngredientCard.test.tsx" name="IngredientCard &gt; should render correct icon for toppings category" time="0.004">
        </testcase>
        <testcase classname="src/components/Ingredients/IngredientCard.test.tsx" name="IngredientCard &gt; should render correct icon for sauces category" time="0.004">
        </testcase>
        <testcase classname="src/components/Ingredients/IngredientCard.test.tsx" name="IngredientCard &gt; should call onAdd with ingredient id when card is clicked" time="0.101">
        </testcase>
        <testcase classname="src/components/Ingredients/IngredientCard.test.tsx" name="IngredientCard &gt; should call onAdd when add button is clicked" time="0.057">
        </testcase>
        <testcase classname="src/components/Ingredients/IngredientCard.test.tsx" name="IngredientCard &gt; should format price with whole numbers correctly" time="0.003">
        </testcase>
    </testsuite>
</testsuites>
